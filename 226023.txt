4. 
$ cd /Documents/Факултет/Семестар4/СофтверскоИнженерство/Лабс/Лаб1
$ mkdir SI_2024_lab1_226023
$ cd SI_2024_lab1_226023
$ git init
$ git config user.name TheeOliver
$ git config user.email obuteski@gmail.com
– Влегување во посакан директориум, креирање на нов директориум, влегување во истиот и иницијализиранје на git.
5.
$ git remote add origin https://github.com/TheeOliver/SI_2024_lab1_226023.git
– Поврзување на локалниот репозиториум со оддалечениот.
6.
$ nano README.md
$ git add README.md
$ git commit -m “Initial commit”
– Креирање на документ README.md и запушување во него преку командата nano; додавање на истиот во git и правење commit со дадена порака.
7.
$ nano SILab1Main.java
$ nano SILab1_1.java
$ nano SILab1_2.java
$ git add --all
$ git commit -m “Add starter code”
– Додавање на датотеките и правње commit на истите со дадена порака.
8. 
$ git push origin master
– Синхорнизирање на сите гранки на оддалечениот репозиториум.
9.
$ git branch bug1
$ git branch bug2
– Отворање на две нови гранки, bug1 и bug2.
10.
$ git checkout bug1
– Префрлање на гранката bug1.
11.
$ nano SILab1_1.java
$ git add --all
$ git commit -m “Fix wrong condition in filterOddLengthStrings”
– Менување на содржината на SILab1_1.java, додавање на датотеката и правње commit на истата.
12.
$ git checkout bug2
– Префрлање на гранката bug2.
13.
$ nano SILab1_2.java
$ git add --all 
$ git commit -m “Fix wrong condition in makeBigStringFrom”
– Менување на содржината на SILab1_2.java, додавање на датотеката и правње commit на истата.
14.
$ git checkout bug1
– Префрлање на гранката bug1.
15.
$ nano SILab1Main.java
$ git add --all
$ git commit -m “Call method filterOddLengthStrings”
– Менување на содржината на SILab1Main.java, додавање на датотеката и правње commit на истата.
16.
$ git checkout bug2
– Префрлање на гранката bug2.
17.
$ nano SILab1Main.java
$ git add --all
$ git commit -m “Call method makeBigStringFrom in main class”
– Менување на содржината на SILab1Main.java, додавање на датотеката и правње commit на истата.
18.
$ git push origin bug1
$ git push origin bug2
– Синхронизирање на гранките bug1 и bug2.
19.
$ git checkout master
– Префрлање на гранката master.
20. 
$ git merge bug1
– Спојување на гранката bug1 кон гранката master.
21.
$ git push --all origin
– Синхронизирање на сите гранки со оддалечениот репозиториум.
22.
$ git checkout bug2
– Префрлање на гранката bug2.
23.
$ git rebase master
//Се создаде конфликт
$ nano SILab1Main.java
//Направив промени во скриптата за да го поправам конфликтот
$ git add SILab1Main.java
//Го додадов фајлот
$ git rebase –continue
//Продолжив со rebase и успешно се изврши 
24.
$ git checkout master
– Префрлање на гранката master.
25. 
$ git merge bug2
– Спојување на гранката bug2 кон гранката master.
26.
$ git push --all origin
– Сингронизирање на сите гранки со оддалечениот репозиториум.
//Настана грешка со bug2
27.
$ git push --force origin bug2
– Синхронизирање на bug2 со оддалечениот репозиториум.
28.
$ git log > logs.txt
$ nano 226023.txt
$ git add logs.txt
$ git add 226023.txt
$ git commit -m “Final commit”
– Креирање документ logs.txt каде стојат доесгашните git логови, креирање документ 226023.txt каде стои досегашната документација на лабораториската вежба, додавање на двете и правење commit.
29.
$ git push --all origin
– Синхронизирање на сите гранки со оддалечениот репозиториум.

